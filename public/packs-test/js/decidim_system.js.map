{"version":3,"file":"js/decidim_system.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;;AACA;AACA;;;;AAEA;AAAA;;AACA;AACA;AADA;AAGA;AACA;AACA;;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAEA;;AAEA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;;AAGA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;AAEA;AAAA;;AACA;AAEA;AACA;AAEA;AACA;AACA;;AAEA;;AACA;;AACA;AALA;;AAOA;AACA;;AAEA;;AACA;;AACA;AALA;;AAQA;AACA;AADA;AAhBA;AAoBA;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA;AAMA;AANA;AAQA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AA5BA;AA+BA;AAjDA;;AAmDA;AACA;AACA;AACA;AAHA;;AAKA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AAVA;;AAYA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AAPA;AADA;;AAYA;AACA;AADA;AAOA;AACA;AADA;AAGA;AACA;AADA;AAKA;AACA;AACA;;AACA;AACA;AACA;AADA;AADA;;;;;;;;;;;;;ACtKA;AAEA;AACA;;AAGA;AACA;AACA;AAFA;AAJA;;;;;;;;;;;;;ACFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AADA;AAIA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AAHA;AAbA;;AAqBA;;;;;;;;;;;ACxCA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AElDA;AACA;AACA;AACA;AACA","sources":["webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-f920e99dc728/decidim-core/app/packs/src/decidim/configuration.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-f920e99dc728/decidim-core/app/packs/src/decidim/confirm.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-f920e99dc728/decidim-core/app/packs/src/decidim/input_tags.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-f920e99dc728/decidim-system/app/packs/entrypoints/decidim_system.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-f920e99dc728/decidim-system/app/packs/src/decidim/system/application.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-f920e99dc728/decidim-system/app/packs/entrypoints/decidim_system.scss?20b0","webpack://app/webpack/bootstrap","webpack://app/webpack/runtime/chunk loaded","webpack://app/webpack/runtime/compat get default export","webpack://app/webpack/runtime/define property getters","webpack://app/webpack/runtime/global","webpack://app/webpack/runtime/hasOwnProperty shorthand","webpack://app/webpack/runtime/make namespace object","webpack://app/webpack/runtime/node module decorator","webpack://app/webpack/runtime/jsonp chunk loading","webpack://app/webpack/before-startup","webpack://app/webpack/startup","webpack://app/webpack/after-startup"],"sourcesContent":["export default class Configuration {\n  constructor() {\n    this.config = {};\n  }\n\n  set(key, value = null) {\n    if (typeof key === \"object\") {\n      this.config = { ...this.config, ...key };\n    } else {\n      this.config[key] = value;\n    }\n  }\n\n  get(key) {\n    return this.config[key];\n  }\n}\n","/**\n * A custom confirm dialog for Decidim based on Foundation reveals.\n *\n * Note that this needs to be loaded before the application JS in order for\n * it to gain control over the confirm events BEFORE rails-ujs is loaded.\n */\n\nimport Rails from \"@rails/ujs\"\n\nlet TEMPLATE_HTML = null;\n\nclass ConfirmDialog {\n  constructor(sourceElement) {\n    this.$modal = $(TEMPLATE_HTML);\n    this.$source = sourceElement;\n    this.$content = $(\".confirm-modal-content\", this.$modal);\n    this.$buttonConfirm = $(\"[data-confirm-ok]\", this.$modal);\n    this.$buttonCancel = $(\"[data-confirm-cancel]\", this.$modal);\n\n    // Avoid duplicate IDs and append the new modal to the body\n    const titleId = `confirm-modal-title-${Math.random().toString(36).substring(7)}`;\n\n    this.$modal.removeAttr(\"id\");\n    $(\"#confirm-modal-title\", this.$modal).attr(\"id\", titleId);\n    this.$modal.attr(\"aria-labelledby\", titleId);\n\n    $(\"body\").append(this.$modal);\n    this.$modal.foundation();\n  }\n\n  confirm(message) {\n    this.$content.html(message);\n\n    this.$buttonConfirm.off(\"click\");\n    this.$buttonCancel.off(\"click\");\n\n    return new Promise((resolve) => {\n      this.$buttonConfirm.on(\"click\", (ev) => {\n        ev.preventDefault();\n\n        this.$modal.foundation(\"close\");\n        resolve(true);\n        this.$source.focus();\n      });\n      this.$buttonCancel.on(\"click\", (ev) => {\n        ev.preventDefault();\n\n        this.$modal.foundation(\"close\");\n        resolve(false);\n        this.$source.focus();\n      });\n\n      this.$modal.foundation(\"open\").on(\"closed.zf.reveal\", () => {\n        this.$modal.remove();\n      });\n    });\n  }\n}\n\n// Override the default confirm dialog by Rails\n// See:\n// https://github.com/rails/rails/blob/fba1064153d8e2f4654df7762a7d3664b93e9fc8/actionview/app/assets/javascripts/rails-ujs/features/confirm.coffee\n//\n// There is apparently a better way coming in Rails 6:\n// https://github.com/rails/rails/commit/e9aa7ecdee0aa7bb4dcfa5046881bde2f1fe21cc#diff-e1aaa45200e9adcbcb8baf1c5375b5d1\n//\n// The old approach is broken according to https://github.com/rails/rails/issues/36686#issuecomment-514213323\n// so for the moment this needs to be executed **before** Rails.start()\nconst allowAction = (ev, element) => {\n  const message = $(element).data(\"confirm\");\n  if (!message) {\n    return true;\n  }\n\n  if (!Rails.fire(element, \"confirm\")) {\n    return false;\n  }\n\n  if (TEMPLATE_HTML === null) {\n    TEMPLATE_HTML = $(\"#confirm-modal\")[0].outerHTML;\n    $(\"#confirm-modal\").remove();\n  }\n\n  const dialog = new ConfirmDialog(\n    $(element)\n  );\n  dialog.confirm(message).then((answer) => {\n    const completed = Rails.fire(element, \"confirm:complete\", [answer]);\n    if (answer && completed) {\n      // Allow the event to propagate normally and re-dispatch it without\n      // the confirm data attribute which the Rails internal method is\n      // checking.\n      $(element).data(\"confirm\", null);\n      $(element).removeAttr(\"data-confirm\");\n\n      // The submit button click events won't do anything if they are\n      // dispatched as is. In these cases, just submit the underlying form.\n      if (ev.type === \"click\" &&\n        (\n          $(element).is('button[type=\"submit\"]') ||\n          $(element).is('input[type=\"submit\"]')\n        )\n      ) {\n        $(element).parents(\"form\").submit();\n      } else {\n        let origEv = ev.originalEvent || ev;\n        let newEv = origEv;\n        if (typeof Event === \"function\") {\n          // Clone the event because otherwise some click events may not\n          // work properly when re-dispatched.\n          newEv = new origEv.constructor(origEv.type, origEv);\n        }\n        ev.target.dispatchEvent(newEv);\n      }\n    }\n  });\n\n  return false;\n};\nconst handleConfirm = (ev, element) => {\n  if (!allowAction(ev, element)) {\n    Rails.stopEverything(ev);\n  }\n};\nconst getMatchingEventTarget = (ev, selector) => {\n  let target = ev.target;\n  while (!(!(target instanceof Element) || Rails.matches(target, selector))) {\n    target = target.parentNode;\n  }\n\n  if (target instanceof Element) {\n    return target;\n  }\n\n  return null;\n};\nconst handleDocumentEvent = (ev, matchSelectors) => {\n  return matchSelectors.some((currentSelector) => {\n    let target = getMatchingEventTarget(ev, currentSelector);\n    if (target === null) {\n      return false;\n    }\n\n    handleConfirm(ev, target);\n    return true;\n  });\n};\n\ndocument.addEventListener(\"click\", (ev) => {\n  return handleDocumentEvent(ev, [\n    Rails.linkClickSelector,\n    Rails.buttonClickSelector,\n    Rails.formInputClickSelector\n  ]);\n});\ndocument.addEventListener(\"change\", (ev) => {\n  return handleDocumentEvent(ev, [Rails.inputChangeSelector]);\n});\ndocument.addEventListener(\"submit\", (ev) => {\n  return handleDocumentEvent(ev, [Rails.formSubmitSelector]);\n});\n\n// This is needed for the confirm dialog to work with Foundation Abide.\n// Abide registers its own submit click listeners since Foundation 5.6.x\n// which will be handled before the document listeners above. This would\n// break the custom confirm functionality when used with Foundation Abide.\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  $(Rails.formInputClickSelector).on(\"click.confirm\", (ev) => {\n    handleConfirm(ev, getMatchingEventTarget(ev, Rails.formInputClickSelector));\n  });\n});\n","import \"bootstrap-tagsinput\"\n\n$(() => {\n  const $tagContainer = $(\".js-tags-container\");\n\n  // Initialize\n  $tagContainer.tagsinput({\n    tagClass: \"input__tag\",\n    trimValue: true\n  });\n\n});\n","import \"src/decidim/system/application\"\nimport \"entrypoints/decidim_system.scss\"\n","/* eslint no-unused-vars: 0 */\n/* eslint id-length: [\"error\", { \"exceptions\": [\"$\"] }] */\n\nimport \"core-js/stable\";\nimport \"regenerator-runtime/runtime\";\nimport $ from \"jquery\"\nimport Quill from \"quill\"\nimport Rails from \"@rails/ujs\"\nimport \"foundation-sites\"\n\nimport createQuillEditor from \"src/decidim/editor\"\nimport Configuration from \"src/decidim/configuration\"\n\nwindow.Decidim = window.Decidim || {};\nwindow.Decidim.config = new Configuration()\n\nimport \"src/decidim/input_tags\"\nimport \"src/decidim/confirm\"\n\n$(() => {\n  $(document).foundation();\n\n  $(\".editor-container\").each((_idx, container) => {\n    createQuillEditor(container);\n  });\n\n  $(\"button.collapse\").on(\"click\", () => {\n    $(\".collapsible\").addClass(\"hide\");\n    $(\"button.expand\").removeClass(\"hide\");\n    $(\"button.collapse\").addClass(\"hide\");\n  });\n\n  $(\"button.expand\").on(\"click\", () => {\n    $(\".collapsible\").removeClass(\"hide\");\n    $(\"button.collapse\").removeClass(\"hide\");\n    $(\"button.expand\").addClass(\"hide\");\n  });\n});\n\n// This needs to be loaded after confirm dialog to bind properly\nRails.start()\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"decidim_system\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkapp\"] = self[\"webpackChunkapp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_jquery_dist_jquery-exposed_js\",\"vendors-node_modules_bootstrap-tagsinput_dist_bootstrap-tagsinput_js-node_modules_core-js_mod-91b0c1\",\"_rbenv_versions_2_7_5_lib_ruby_gems_2_7_0_bundler_gems_decidim-f920e99dc728_decidim-core_app_-8aee6a\"], function() { return __webpack_require__(\"../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-f920e99dc728/decidim-system/app/packs/entrypoints/decidim_system.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}