{"version":3,"file":"js/decidim_admin_navigation_maps.js","mappings":";;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;AACA;;AAEA;;;;;AACA;AAAA;;AAAA;;;AAEA;AACA;;AACA;AACA;AACA;AAJA;AAMA;;AACA;;AACA;;AACA;;AAXA;AAYA;;;;AAEA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;;AACA;;AACA;AAJA;AAOA;AACA;;AACA;AAFA;AAIA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;;;AAEA;AAAA;;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;AACA;;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AACA;AACA;;;;AA7EA;;;;;;;;;;;;;;ACHA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AADA;AAfA;AATA;AARA;;AAwCA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AAFA;AAKA;AACA;;AACA;AACA;AACA;AAJA;AAOA;AACA;;AACA;AACA;AACA;AAJA;;AAQA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAfA;;AAkBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAHA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AAAA;AACA;AACA;AAlBA;AAoBA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AA7BA;AA+BA;AACA;AACA;AACA;AACA;AACA;AApCA;AA9GA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;AAGA;;AACA;AACA;;AACA;AACA;AADA;AAGA;AACA;AANA;;AAQA;;AACA;;AACA;AACA;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAcA;AACA;AACA;;;AAEA;AACA;AACA;;AAEA;AACA;AADA;AAIA;AACA;;AACA;AACA;;;AAEA;AAAA;;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AALA;AADA;AASA;;;AAEA;AACA;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;AACA;AACA;AACA;;;AAEA;AAAA;;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1HA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AElDA;AACA;AACA;AACA;AACA","sources":["webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-navigation_maps-1.3.4/app/packs/entrypoints/decidim_admin_navigation_maps.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-navigation_maps-1.3.4/app/packs/src/decidim/navigation_maps/admin/map_editor.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-navigation_maps-1.3.4/app/packs/src/decidim/navigation_maps/admin/navigation_maps.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-navigation_maps-1.3.4/app/packs/src/decidim/navigation_maps/map_view.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-navigation_maps-1.3.4/app/packs/entrypoints/decidim_admin_navigation_maps.scss?8e81","webpack://app/webpack/bootstrap","webpack://app/webpack/runtime/chunk loaded","webpack://app/webpack/runtime/compat get default export","webpack://app/webpack/runtime/define property getters","webpack://app/webpack/runtime/hasOwnProperty shorthand","webpack://app/webpack/runtime/make namespace object","webpack://app/webpack/runtime/jsonp chunk loading","webpack://app/webpack/before-startup","webpack://app/webpack/startup","webpack://app/webpack/after-startup"],"sourcesContent":["import \"src/decidim/navigation_maps/admin/navigation_maps.js\"\n\n// CSS\nimport \"entrypoints/decidim_admin_navigation_maps.scss\";\n","// Creates a map\nimport NavigationMapView from \"src/decidim/navigation_maps/map_view.js\";\n\nexport default class NavigationMapEditor extends NavigationMapView {\n  constructor(map_object, table_object) {\n    // Call constructor of superclass to initialize superclass-derived members.\n    super(map_object, () => {\n      this.createControls();\n      if (this.blueprint) {\n        this.createAreas();\n      }\n    });\n    this.table_object = table_object;\n    this.createAreaCallback = function () {};\n    this.editAreaCallback = function () {};\n    this.removeAreaCallback = function () {};\n  }\n\n  createControls() {\n    this.map.pm.addControls({\n      position: \"topleft\",\n      drawCircle: false,\n      drawMarker: false,\n      drawCircleMarker: false,\n      drawPolyline: false,\n      cutPolygon: false\n    });\n\n    this.map.on(\"pm:create\", (e) => {\n      let geojson = e.layer.toGeoJSON();\n      this.blueprint[e.layer._leaflet_id] = geojson;\n      this.attachEditorEvents(e.layer);\n      this.createAreaCallback(e.layer._leaflet_id, e.layer, this);\n    });\n\n    this.map.on(\"pm:remove\", (e) => {\n      delete this.blueprint[e.layer._leaflet_id];\n      this.removeAreaCallback(e.layer._leaflet_id, e.layer, this);\n    });\n  };\n\n  editing() {\n    let pm = this.map.pm;\n    return pm.globalRemovalEnabled() || pm.globalDragModeEnabled() || pm.globalEditEnabled();\n  };\n\n  // register callback to handle area edits,removals and creations\n  onCreateArea(callback) {\n    this.createAreaCallback = callback;\n  };\n  onEditArea(callback) {\n    this.editAreaCallback = callback;\n  };\n  onRemoveArea(callback) {\n    this.removeCreateCallback = callback;\n  };\n\n  attachEditorEvents (layer) {\n    layer.on(\"mouseover\", (e) => {\n      e.target.getElement().classList.add(\"selected\")\n    });\n\n    layer.on(\"mouseout\", (e) => {\n      e.target.getElement().classList.remove(\"selected\")\n    });\n\n    layer.on(\"pm:edit\", (e) => {\n      this.blueprint[e.target._leaflet_id] = e.target.toGeoJSON();\n      this.editAreaCallback(e.target._leaflet_id, e.target, this);\n    });\n\n    layer.on(\"click\", (e) => {\n      if (!this.editing()) {\n        this.clickAreaCallback(e.target._leaflet_id, e.target, this);\n      }\n    });\n  };\n\n  getBlueprint () {\n    return this.blueprint;\n  };\n\n}\n","// Place all the behaviors and hooks related to the matching controller here.\n// All this logic will automatically be available in application.js.\n// import \"jquery-form\"; // we use a CDN instead due a bug in webpacker\nimport NavigationMapEditor from \"src/decidim/navigation_maps/admin/map_editor.js\";\n\n$(() => {\n\n  let $maps = $(\".navigation_maps.admin .map\");\n  let $progress = $(\".navigation_maps.admin .progress\");\n  let $bar = $(\".navigation_maps.admin .progress-meter\");\n  let $loading = $(\".navigation_maps.admin .loading\");\n  let $callout = $(\".navigation_maps.admin .callout\");\n  let $modal = $(\"#mapEditModal\");\n  let $form = $(\"form\");\n  let $tabs = $(\"#navigation_maps-tabs\");\n  let $accordion = $(\".navigation_maps.admin .accordion\");\n  let editors = {};\n  let new_areas = {};\n\n  $maps.each((_i, el) => {\n    let id = $(el).data(\"id\");\n    let table = document.getElementById(`navigation_maps-table-${id}`);\n    editors[id] = new NavigationMapEditor(el, table);\n    editors[id].onCreateArea((area_id) => {\n      new_areas[area_id] = true;\n    });\n\n    editors[id].onClickArea((area_id, area) => {\n      $modal.find(\".modal-content\").html(\"\");\n      $modal.addClass(\"loading\").foundation(\"open\");\n      $callout.hide();\n      $callout.removeClass(\"alert success\");\n      // \"new\" form insted of editing\n      let rel = new_areas[area_id]\n        ? \"new\"\n        : area_id;\n      $modal.find(\".modal-content\").load(`/admin/navigation_maps/blueprints/${id}/areas/${rel}`, () => {\n        let $input1 = $modal.find('input[name=\"blueprint_area[area_id]\"]');\n        let $input2 = $modal.find('input[name=\"blueprint_area[area_type]\"]');\n        let $input3 = $modal.find('input[name=\"blueprint_area[area]\"]');\n        let a = area.toGeoJSON();\n        $modal.removeClass(\"loading\");\n        if ($input1.length) { \n          $input1.val(area_id); \n        }\n        if ($input2.length) {\n          $input2.val(a.type);\n        }\n        if ($input3.length) {\n          $input3.val(JSON.stringify(a));\n        }\n        $modal.find(\"ul[data-tabs=true]\").each(() => {\n          new Foundation.Tabs($(el)); // eslint-disable-line\n        });\n      });\n    });\n  });\n\n  // Rails AJAX events\n  document.body.addEventListener(\"ajax:error\", (responseText) => {\n    $callout.contents(\"p\").html(`${responseText.detail[0].message}: <strong>${responseText.detail[0].error}</strong>`);\n    $callout.addClass(\"alert\");\n  });\n\n  document.body.addEventListener(\"ajax:success\", (responseText) => {\n    if (new_areas[responseText.detail[0].area]) {\n      delete new_areas[responseText.detail[0].area]\n    }\n    let blueprint_id = responseText.detail[0].blueprint_id;\n    let area_id = responseText.detail[0].area_id;\n    let area = responseText.detail[0].area;\n    editors[blueprint_id].setLayerProperties(editors[blueprint_id].map._layers[area_id], area);\n    editors[blueprint_id].blueprint[area_id] = area;\n    $callout.contents(\"p\").html(responseText.detail[0].message);\n    $callout.addClass(\"success\");\n  });\n\n  document.body.addEventListener(\"ajax:complete\", () => {\n    $callout.show();\n    $modal.foundation(\"close\");\n  })\n\n  $tabs.on(\"change.zf.tabs\", (e, $tab, $content) => {\n    let id = $content.find(\".map\").data(\"id\");\n    if (id) {\n      editors[id].reload();\n    }\n  });\n\n  $accordion.on(\"down.zf.accordion\", () => {\n    let id = $accordion.find(\".map\").data(\"id\");\n    if (id) {\n      editors[id].reload();\n    }\n  });\n\n  // If a new item si going to be created o the image is changed a reload is needed\n  let needsReload = () => {\n    let reload = false;\n    if ($form.find(\"#map-new input:checked\").length) {\n      return true;\n    }\n    if ($form.find(\".delete-tab input[type=checkbox]:checked\").length) {\n      return true;\n    }\n\n    $form.find(\"input[type=file],input[tabs_id=blueprints___title]\").each((_i, el) => {\n      if ($(el).val()) {\n        reload = true;\n        return false;\n      }\n    });\n    return reload;\n  };\n\n  $form.ajaxForm({\n    url: $form.find(\"[name=action]\").val(),\n    beforeSerialize: () => {\n      Object.keys(editors).forEach((key) => {\n        let editor = editors[key];\n        $(`#blueprints_${editor.id}_blueprint`).val(JSON.stringify(editor.getBlueprint()));\n      });\n    },\n    beforeSend: () => {\n      let percentVal = \"0%\";\n      $bar.width(percentVal).html(percentVal);\n      $progress.show();\n      $callout.hide();\n      $callout.removeClass(\"alert success\");\n      $loading.show();\n    },\n    uploadProgress: (event, position, total, percentComplete) => { // eslint-disable-line\n      let percentVal = `${percentComplete}%`;\n      $bar.width(percentVal).html(percentVal);\n    },\n    success: (responseText) => {\n      $callout.show();\n      $progress.hide();\n      $callout.contents(\"p\").html(responseText);\n      $callout.addClass(\"success\");\n      $loading.hide();\n      if (needsReload()) {\n        $loading.show();\n        location.reload();\n      }\n    },\n    error: (xhr) => {\n      $loading.hide();\n      $callout.show();\n      $callout.contents(\"p\").html(xhr.responseText);\n      $callout.addClass(\"alert\");\n    }\n  });\n});\n","// Creates a map view\nimport \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"@geoman-io/leaflet-geoman-free\";\nimport \"@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css\";\n\nexport default class NavigationMapView {\n  constructor(map_object, imageDecorator) {\n    this.features = {};\n    this.map_object = map_object;\n    this.id = map_object.dataset.id;\n    this.image_path = map_object.dataset.image;\n    this.blueprint = map_object.dataset.blueprint\n      ? JSON.parse(map_object.dataset.blueprint)\n      : {};\n    this.image = new Image();\n    this.image.onload = () => {\n      this.createMap();\n      if (typeof imageDecorator === \"function\") {\n        imageDecorator(this);\n      } else if (this.blueprint) {\n        this.createAreas();\n      }\n    };\n    this.image.src = this.image_path;\n    this.clickAreaCallback = () => {};\n    this.setLayerPropertiesCallback = () => {};\n  }\n\n  createMap() {\n    let bounds = [[0, 0], [this.image.height, this.image.width]];\n    this.map = L.map(this.map_object, {\n      minZoom: -1,\n      maxZoom: 2,\n      crs: L.CRS.Simple,\n      noWrap: true,\n      zoomSnap: 0,\n      // zoomDelta: 0.1,\n      maxBounds: [[0, 0], [this.image.height, this.image.width]],\n      center: [this.image.height / 2, this.image.width / 2],\n      zoom: -1,\n      scrollWheelZoom: false,\n      attributionControl: false\n    });\n\n    L.imageOverlay(this.image.src, bounds).addTo(this.map);\n    this.fitBounds();\n  };\n\n  fitBounds() {\n    let image_ratio = this.image.height / this.image.width;\n    let map_ratio = this.map_object.offsetHeight / this.map_object.offsetWidth;\n\n    if (image_ratio > map_ratio) {\n      this.map.fitBounds([[0, 0], [0, this.image.width]]);\n    }\n    else {\n      this.map.fitBounds([[0, 0], [this.image.height, 0]]);\n    }\n    this.map.setView([this.image.height / 2, this.image.width / 2]);\n  };\n\n  createAreas() {\n    this.forEachBlueprint((id, geoarea) => {\n      new L.GeoJSON(geoarea, {\n        onEachFeature: (feature, layer) => {\n          layer._leaflet_id = id;\n          this.setLayerProperties(layer, geoarea);\n          this.attachEditorEvents(layer);\n        }\n      }).addTo(this.map);\n    });\n  };\n\n  setLayerProperties (layer, area) {\n    let props = area.properties;\n    if (props) {\n      if (props.color) {\n        layer.setStyle({fillColor: props.color, color: props.color});\n      }\n      this.setLayerPropertiesCallback(layer, props);\n    }\n  };\n\n  attachEditorEvents (layer) {\n    layer.on(\"mouseover\", (e) => {\n      e.target.getElement().classList.add(\"selected\")\n    });\n\n    layer.on(\"mouseout\", (e) => {\n      e.target.getElement().classList.remove(\"selected\")\n    });\n\n    layer.on(\"click\", (e) => {\n      this.clickAreaCallback(e.target, this);\n    });\n  };\n\n  // register callback to handle area clicks\n  onClickArea(callback) {\n    this.clickAreaCallback = callback;\n  };\n\n  onSetLayerProperties(callback) {\n    this.setLayerPropertiesCallback = callback;\n  };\n\n  forEachBlueprint (decorator) {\n    for (let id in this.blueprint) {\n      let geoarea = this.blueprint[id];\n      // avoid non-polygons for the moment\n      if (geoarea.geometry && geoarea.geometry.type === \"Polygon\") {\n        decorator(id, geoarea);\n      }\n    }\n  };\n\n  reload () {\n    if (this.map) {\n      this.map.invalidateSize(true);\n      this.fitBounds();\n    }\n  };\n}\n\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"decidim_admin_navigation_maps\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkapp\"] = self[\"webpackChunkapp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_leaflet_dist_leaflet-src_js\",\"vendors-node_modules_geoman-io_leaflet-geoman-free_dist_leaflet-geoman_min_js-node_modules_ge-a7faae\"], function() { return __webpack_require__(\"../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/gems/decidim-navigation_maps-1.3.4/app/packs/entrypoints/decidim_admin_navigation_maps.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}