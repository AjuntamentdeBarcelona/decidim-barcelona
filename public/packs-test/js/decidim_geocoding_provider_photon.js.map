{"version":3,"file":"js/decidim_geocoding_provider_photon.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAeA;AACA;AACA;;AACA;AACA;;AACA;;AACA;AAEA;AALA;;AAQA;AAEA;AACA;AACA;AAGA;AACA;AACA;;AACA;AACA;AACA;AAVA;AAaA;AAhDA;AADA;;;;;;;;;;;;;;ACFA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;;AAIA;AAAA;AACA;AACA;AACA;AACA;;AACA;AAJA;AAOA;AACA;;;;;;;;;;;;;AC1BA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AAQA;;AACA;AACA;AACA;;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAHA;AASA;;AACA;AApBA;AADA;AARA;AA1BA;AAHA;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AElDA;AACA;AACA;AACA;AACA","sources":["webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-f920e99dc728/decidim-core/app/packs/entrypoints/decidim_geocoding_provider_photon.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-f920e99dc728/decidim-core/app/packs/src/decidim/geocoding.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-f920e99dc728/decidim-core/app/packs/src/decidim/geocoding/format_address.js","webpack://app/../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-f920e99dc728/decidim-core/app/packs/src/decidim/geocoding/provider/photon.js","webpack://app/webpack/bootstrap","webpack://app/webpack/runtime/chunk loaded","webpack://app/webpack/runtime/compat get default export","webpack://app/webpack/runtime/define property getters","webpack://app/webpack/runtime/hasOwnProperty shorthand","webpack://app/webpack/runtime/make namespace object","webpack://app/webpack/runtime/jsonp chunk loading","webpack://app/webpack/before-startup","webpack://app/webpack/startup","webpack://app/webpack/after-startup"],"sourcesContent":["import \"src/decidim/geocoding/provider/photon\"\n","import Tribute from \"src/decidim/vendor/tribute\"\n\n$(() => {\n  $(\"[data-decidim-geocoding]\").each((_i, el) => {\n    const $input = $(el);\n    const $fieldContainer = $input.parent();\n\n    $fieldContainer.addClass(\"has-tribute\");\n\n    const tribute = new Tribute(\n      {\n        autocompleteMode: true,\n        // autocompleteSeparator: / \\+ /, // See below, requires Tribute update\n        allowSpaces: true,\n        positionMenu: false,\n        replaceTextSuffix: \"\",\n        menuContainer: $fieldContainer.get(0),\n        noMatchTemplate: null,\n        values: (text, cb) => {\n          $input.trigger(\"geocoder-suggest.decidim\", [text, cb]);\n        }\n      }\n    );\n\n    // Port https://github.com/zurb/tribute/pull/406\n    // This changes the autocomplete separator from space to \" + \" so that\n    // we can do searches such as \"streetname 4\" including a space. Otherwise\n    // this would do two separate searches for \"streetname\" and \"4\".\n    tribute.range.getLastWordInText = (text) => {\n      const final = text.replace(/\\u00A0/g, \" \");\n      const wordsArray = final.split(/ \\+ /);\n      const worldsCount = wordsArray.length - 1;\n\n      return wordsArray[worldsCount].trim();\n    };\n\n    tribute.attach($input.get(0));\n\n    $input.on(\"tribute-replaced\", function(ev) {\n      const selectedItem = ev.detail.item.original;\n      $input.trigger(\"geocoder-suggest-select.decidim\", [selectedItem]);\n\n      // Not all geocoding autocomplete APIs include the coordinates in the\n      // suggestions response. Therefore, some APIs may require additional\n      // query for the coordinates, which should trigger this event for the\n      // input element.\n      if (selectedItem.coordinates) {\n        $input.trigger(\"geocoder-suggest-coordinates.decidim\", [selectedItem.coordinates]);\n      }\n    });\n\n    $input.data(\"geocoder-tribute\", tribute);\n  });\n});\n","/* eslint-disable require-jsdoc */\n\n// If you want to customize the geocoder address format which is displayed\n// when showing the geocoding results list, add this configuration code to\n// your geocoder at config/initializers/decidim.rb:\n// config.maps = {\n//   # ... other configs ...\n//   autocomplete: {\n//     address_format: [%w(street houseNumber), \"city\", \"country\"]\n//   }\n// }\n//\n// For the available address keys, refer to the provider's own documentation.\nconst compact = (items) => items.filter(\n  (part) => part !== null && typeof part !== \"undefined\" && `${part}`.trim().length > 0\n);\n\nexport default function formatAddress(object, keys, separator = \", \") {\n  const parts = keys.map((key) => {\n    if (Array.isArray(key)) {\n      return formatAddress(object, key, \" \");\n    }\n    return object[key] || object[key.toLowerCase()];\n  })\n\n  return compact(parts).join(separator).trim();\n}\n","import \"src/decidim/geocoding\"\nimport formatAddress from \"src/decidim/geocoding/format_address\"\n\n/**\n * For the available address format keys, refer to:\n * https://github.com/komoot/photon\n */\n$(() => {\n  const generateAddressLabel = formatAddress;\n\n  $(\"[data-decidim-geocoding]\").each((_i, el) => {\n    const $input = $(el);\n    const config = $input.data(\"decidim-geocoding\");\n    const queryMinLength = config.queryMinLength || 2;\n    // Default Photon installation only supports these languages but for\n    // custom instances, you can configure the supported languages.\n    const supportedLanguages = config.supportedLanguages || [\"de\", \"en\", \"it\", \"fr\"];\n    const defaultLanguage  = config.defaultLanguage || \"en\";\n    const addressFormat = config.addressFormat || [\n      \"name\",\n      [\"street\", \"housenumber\"],\n      \"postcode\",\n      \"city\",\n      \"state\",\n      \"country\"\n    ];\n    let language = $(\"html\").attr(\"lang\");\n    if (!supportedLanguages.includes(language)) {\n      language = defaultLanguage;\n    }\n    let currentSuggestionQuery = null;\n\n    if (!config.url || config.url.length < 1) {\n      return;\n    }\n\n    $input.on(\"geocoder-suggest.decidim\", (_ev, query, callback) => {\n      clearTimeout(currentSuggestionQuery);\n\n      // Do not trigger API calls on short queries\n      if (`${query}`.trim().length < queryMinLength) {\n        return;\n      }\n\n      currentSuggestionQuery = setTimeout(() => {\n        $.ajax({\n          method: \"GET\",\n          url: config.url,\n          data: {\n            q: query, // eslint-disable-line\n            lang: language\n          },\n          dataType: \"json\"\n        }).done((resp) => {\n          if (resp.features) {\n            return callback(resp.features.map((item) => {\n              const label = generateAddressLabel(item.properties, addressFormat);\n\n              return {\n                key: label,\n                value: label,\n                coordinates: item.geometry.coordinates\n              }\n            }));\n          }\n          return null;\n        });\n      }, 200);\n    });\n  })\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"decidim_geocoding_provider_photon\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkapp\"] = self[\"webpackChunkapp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"_rbenv_versions_2_7_5_lib_ruby_gems_2_7_0_bundler_gems_decidim-f920e99dc728_decidim-core_app_-35a28b\"], function() { return __webpack_require__(\"../../../../.rbenv/versions/2.7.5/lib/ruby/gems/2.7.0/bundler/gems/decidim-f920e99dc728/decidim-core/app/packs/entrypoints/decidim_geocoding_provider_photon.js\"); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}